export const jsxTypes = `
export interface HTMLAttributes<T = HTMLElement> extends DOMAttributes<T> {
  innerHTML?: string;
  accessKey?: string;
  class?: string | {
    [className: string]: boolean;
  };
  contentEditable?: boolean | string;
  contenteditable?: boolean | string;
  contextMenu?: string;
  contextmenu?: string;
  dir?: string;
  draggable?: boolean;
  hidden?: boolean;
  id?: string;
  lang?: string;
  spellcheck?: 'true' | 'false' | any;
  style?: {
    [key: string]: string | undefined;
  };
  tabIndex?: number;
  tabindex?: number | string;
  title?: string;
  inputMode?: string;
  inputmode?: string;
  enterKeyHint?: string;
  enterkeyhint?: string;
  is?: string;
  radioGroup?: string;
  radiogroup?: string;
  role?: string;
  about?: string;
  datatype?: string;
  inlist?: any;
  prefix?: string;
  property?: string;
  resource?: string;
  typeof?: string;
  vocab?: string;
  autoCapitalize?: any;
  autocapitalize?: any;
  autoCorrect?: string;
  autocorrect?: string;
  autoSave?: string;
  autosave?: string;
  color?: string;
  itemProp?: string;
  itemprop?: string;
  itemScope?: boolean;
  itemscope?: boolean;
  itemType?: string;
  itemtype?: string;
  itemID?: string;
  itemid?: string;
  itemRef?: string;
  itemref?: string;
  results?: number;
  security?: string;
  unselectable?: boolean;
}

export interface DOMAttributes<T = Element> {
  key?: string | number;
  ref?: (elm?: T) => void;
  slot?: string;
  part?: string;
  exportparts?: string;
  onCopy?: (event: ClipboardEvent) => void;
  onCopyCapture?: (event: ClipboardEvent) => void;
  onCut?: (event: ClipboardEvent) => void;
  onCutCapture?: (event: ClipboardEvent) => void;
  onPaste?: (event: ClipboardEvent) => void;
  onPasteCapture?: (event: ClipboardEvent) => void;
  onCompositionEnd?: (event: CompositionEvent) => void;
  onCompositionEndCapture?: (event: CompositionEvent) => void;
  onCompositionStart?: (event: CompositionEvent) => void;
  onCompositionStartCapture?: (event: CompositionEvent) => void;
  onCompositionUpdate?: (event: CompositionEvent) => void;
  onCompositionUpdateCapture?: (event: CompositionEvent) => void;
  onFocus?: (event: FocusEvent) => void;
  onFocusCapture?: (event: FocusEvent) => void;
  onFocusIn?: (event: FocusEvent) => void;
  onFocusInCapture?: (event: FocusEvent) => void;
  onFocusOut?: (event: FocusEvent) => void;
  onFocusOutCapture?: (event: FocusEvent) => void;
  onBlur?: (event: FocusEvent) => void;
  onBlurCapture?: (event: FocusEvent) => void;
  onChange?: (event: Event) => void;
  onChangeCapture?: (event: Event) => void;
  onInput?: (event: Event) => void;
  onInputCapture?: (event: Event) => void;
  onReset?: (event: Event) => void;
  onResetCapture?: (event: Event) => void;
  onSubmit?: (event: Event) => void;
  onSubmitCapture?: (event: Event) => void;
  onInvalid?: (event: Event) => void;
  onInvalidCapture?: (event: Event) => void;
  onLoad?: (event: Event) => void;
  onLoadCapture?: (event: Event) => void;
  onError?: (event: Event) => void;
  onErrorCapture?: (event: Event) => void;
  onKeyDown?: (event: KeyboardEvent) => void;
  onKeyDownCapture?: (event: KeyboardEvent) => void;
  onKeyPress?: (event: KeyboardEvent) => void;
  onKeyPressCapture?: (event: KeyboardEvent) => void;
  onKeyUp?: (event: KeyboardEvent) => void;
  onKeyUpCapture?: (event: KeyboardEvent) => void;
  onAuxClick?: (event: MouseEvent) => void;
  onClick?: (event: MouseEvent) => void;
  onClickCapture?: (event: MouseEvent) => void;
  onContextMenu?: (event: MouseEvent) => void;
  onContextMenuCapture?: (event: MouseEvent) => void;
  onDblClick?: (event: MouseEvent) => void;
  onDblClickCapture?: (event: MouseEvent) => void;
  onDrag?: (event: DragEvent) => void;
  onDragCapture?: (event: DragEvent) => void;
  onDragEnd?: (event: DragEvent) => void;
  onDragEndCapture?: (event: DragEvent) => void;
  onDragEnter?: (event: DragEvent) => void;
  onDragEnterCapture?: (event: DragEvent) => void;
  onDragExit?: (event: DragEvent) => void;
  onDragExitCapture?: (event: DragEvent) => void;
  onDragLeave?: (event: DragEvent) => void;
  onDragLeaveCapture?: (event: DragEvent) => void;
  onDragOver?: (event: DragEvent) => void;
  onDragOverCapture?: (event: DragEvent) => void;
  onDragStart?: (event: DragEvent) => void;
  onDragStartCapture?: (event: DragEvent) => void;
  onDrop?: (event: DragEvent) => void;
  onDropCapture?: (event: DragEvent) => void;
  onMouseDown?: (event: MouseEvent) => void;
  onMouseDownCapture?: (event: MouseEvent) => void;
  onMouseEnter?: (event: MouseEvent) => void;
  onMouseLeave?: (event: MouseEvent) => void;
  onMouseMove?: (event: MouseEvent) => void;
  onMouseMoveCapture?: (event: MouseEvent) => void;
  onMouseOut?: (event: MouseEvent) => void;
  onMouseOutCapture?: (event: MouseEvent) => void;
  onMouseOver?: (event: MouseEvent) => void;
  onMouseOverCapture?: (event: MouseEvent) => void;
  onMouseUp?: (event: MouseEvent) => void;
  onMouseUpCapture?: (event: MouseEvent) => void;
  onTouchCancel?: (event: TouchEvent) => void;
  onTouchCancelCapture?: (event: TouchEvent) => void;
  onTouchEnd?: (event: TouchEvent) => void;
  onTouchEndCapture?: (event: TouchEvent) => void;
  onTouchMove?: (event: TouchEvent) => void;
  onTouchMoveCapture?: (event: TouchEvent) => void;
  onTouchStart?: (event: TouchEvent) => void;
  onTouchStartCapture?: (event: TouchEvent) => void;
  onPointerDown?: (event: PointerEvent) => void;
  onPointerDownCapture?: (event: PointerEvent) => void;
  onPointerMove?: (event: PointerEvent) => void;
  onPointerMoveCapture?: (event: PointerEvent) => void;
  onPointerUp?: (event: PointerEvent) => void;
  onPointerUpCapture?: (event: PointerEvent) => void;
  onPointerCancel?: (event: PointerEvent) => void;
  onPointerCancelCapture?: (event: PointerEvent) => void;
  onPointerEnter?: (event: PointerEvent) => void;
  onPointerEnterCapture?: (event: PointerEvent) => void;
  onPointerLeave?: (event: PointerEvent) => void;
  onPointerLeaveCapture?: (event: PointerEvent) => void;
  onPointerOver?: (event: PointerEvent) => void;
  onPointerOverCapture?: (event: PointerEvent) => void;
  onPointerOut?: (event: PointerEvent) => void;
  onPointerOutCapture?: (event: PointerEvent) => void;
  onGotPointerCapture?: (event: PointerEvent) => void;
  onGotPointerCaptureCapture?: (event: PointerEvent) => void;
  onLostPointerCapture?: (event: PointerEvent) => void;
  onLostPointerCaptureCapture?: (event: PointerEvent) => void;
  onScroll?: (event: UIEvent) => void;
  onScrollCapture?: (event: UIEvent) => void;
  onWheel?: (event: WheelEvent) => void;
  onWheelCapture?: (event: WheelEvent) => void;
  onAnimationStart?: (event: AnimationEvent) => void;
  onAnimationStartCapture?: (event: AnimationEvent) => void;
  onAnimationEnd?: (event: AnimationEvent) => void;
  onAnimationEndCapture?: (event: AnimationEvent) => void;
  onAnimationIteration?: (event: AnimationEvent) => void;
  onAnimationIterationCapture?: (event: AnimationEvent) => void;
  onTransitionEnd?: (event: TransitionEvent) => void;
  onTransitionEndCapture?: (event: TransitionEvent) => void;
}
`;
